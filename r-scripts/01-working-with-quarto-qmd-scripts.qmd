---
title: "Working with quarto documents that include R code"
author: "Han Olff_ changed by Joshua Benjamin"
date: "2024-08-29"
format: html
editor: 
  markdown: 
    wrap: 72
editor_options:
  chunk_output_type: console
  ---

# Working with Quarto documents in R

### 1. Benefits of using Quarto over regular R scripts

Working with Quarto has a range of benefits:

-   Using its headers creates an automated outline of your script (see
    pane to the right), this helps in navigating arround in your script
-   You can mix regular text with R script, for example to introduce the
    philosophy or assumptions of a particular analysis, and/or to
    summarize the conclusions that you draw from the analysis
-   formatting of headers, tables, figure captions etc is
    near-automatic, you hardly need to think about it
-   it's code chunks forces you to work in a more modular way when
    developing a script, step by step, task by task
-   the rendered output documents are very nice, can be ready to go as a
    report or publication, even a whole book
-   rendered output can be in all kinds of formats, like docx, pdf,
    html + it integrates very well with generating content for the
    internet
-   a quarto document is easy to ready even for a normal person ðŸ˜Š

### 2. Markdown, R Markdown and Quarto

Markdown is a lightweight markup language used to format plain text in a
simple, human-readable way. It is a simple way to format headers, tables
etc for still a simple text document, such as this text, using plain
text formatting. Files have the .md extension. For example, the '\#' in
front of the first line of this document indicates that it is a title,
and needs to be formatted like that. If you switch this window of this
text to the tab "visual" you see what happens. Markdown is lightweight
eg compared to html (how most internet pages are written), which allows
much more formatting, and makes files practically not readable anymore
with a regular text editor.

Later, Markdown was expanded to R Markdown, which allows to use Markdown
in the context of an R Script. Files have the .Rmd extension. This
allows the alternation of regular text (such as this) with so-called
code-chunks of R script. It allows you to not only write a script, but
also directly in the script explain why you do things a certain way, and
what the result means.

The latest development in this regard is the development of Quarto. It
is an open-source scientific and technical publishing system that allows
you to create high-quality documents, presentations, websites, blogs,
and more using a combination of code, text, and visualizations. It's
designed to be a next-generation tool for literate programming,
reproducible research, and data science, similar to R Markdown but more
flexible and language-agnostic. This document is written in Quarto. It
allows the combination of R script with regular text and figures. So it
is great to explain what you are going to do in a script, and to write
an interpretation of our output. This way, a quarto file with script is
already halfway a scientific report. You can even write a whole paper or
book in Quarto, including all the data analysis that is included in it.
A strong point is that you can even mix languages.

See this [overview of markdown
basics](https://quarto.org/docs/authoring/markdown-basics.html) as used
in Quarto. It also supports the use of
[citations](https://quarto.org/docs/authoring/citations.html). It can
use references in a BibText format. Such a file you can export from most
reference managers. I recommend to use [Zotero](https://www.zotero.org/)
for managing your citations, see how to [export to
BibTex](https://libguides.rhul.ac.uk/referencing/Zoterolatex) from
Zotero.

### 3. Run a (chunk of) R script

A script part in a Quarto document is called a chunk. It starts with
indicating in which language it is written, then some execution options
starting with #\| and then the script itself. This code chunk can be run
as a block of code by using the small green arrow at the top right.

```{r}
# define a variable A and assign a value 5 to it
A <- 5
#same for variable B
B <- 10
#calculate the sum of A and B
C <- A + B
# print the result
print(C)
#caculate the mean of the numbers 1, 3,7,12,46
my_numbers <- c(1, 3, 7, 12, 46)
mean(my_numbers)


```

#make a figure


```{r}

library(tidyverse)
# set the seed of the random number generator (gives same result)
set.seed(123)
# generate 100 random values form a normal distribution with mean=0 and standard deviation 1
randomvalue <- rnorm(n = 100, mean = 0, sd = 1)
print(randomvalue)
mean(randomvalue)

# convert to a dataframe
data1<-data.frame(randomvalue)
data1
# plot as a histogram with axis labels
ggplot2::ggplot(data=data1, 
                mapping=aes(x=randomvalue)) +
  geom_histogram()

```

```{r}

```

So the text
\`\`\``{r} indicates that you start with a code chunk, and`\`\`\`
completes it. use the quote that is typically the key below your \<esc\>
key on your keyboard. To keep your output document clean, you can add
options to messages and warnings (only add when your codes works well)

### 4. Redirect the output of a code chunk

In the default settings of R Studio, the output of @fig-histogram above
is produced "inline", so in the the same window where you read this now.
This is fine for a final report or supplement, but not desirable when
developing the code. In that case, go in R Studio to the menu Tools /
Global Options / Markdown and uncheck the option : "Show output inline
for all R Markdown documents".\
Then the output goes to the console and graph window, while this code
windows stays clean. You can also set it per script in the settings
option next to "render" in the small window menu bar above.

### 5. Rendering a Quarto file to different types of formatted output

At the start of this .qmd file you find what is called the yaml header.
It contains information, using fixed field names, on the title, author
and data of the project.\
A particularly important field for the next step is the output format
once the file is rendered.\
For example, putting\
format: docx\
in the header renders to a Word docx file.\
Some other options for output formats are:

| Format:   | Renders to:                                           |
|-----------|-------------------------------------------------------|
| html      | html for web pages (best default for viewing)         |
| docx      | Word file (best for copying to a document, report)    |
| gfm       | Github-friendly markdown (best for viewing on github) |
| PDF       | Acrobat PDF (best for distributing)                   |
| mediawiki | native format for Wikipedia                           |

Also see this [overview of output
formats](https://quarto.org/docs/reference/).

### 6. Using different execution options in a code chunk

How a code chunk behaves is determined by the execution options. You can
set if you want different aspects as the code itself, the output from
that code, warnings, etc in the output document.

| Execute option: | Descript                                                                                                                                                                                    |
|------------------------|-----------------------------------------------|
| eval            | Evaluate the code chunk (if false, just echos the code into the output). echo Include the source code in output                                                                             |
| output          | Include the results of executing the code in the output (true, false, or asis to indicate that the output is raw markdown and should not have any of Quarto's standard enclosing markdown). |
| warning         | Include warnings in the output.                                                                                                                                                             |
| error           | Include errors in the output (note that this implies that errors executing code will not halt processing of the document).                                                                  |
| include         | Catch all for preventing any output (code or results) from being included (e.g. include: false suppresses all output from the code block).                                                  |

### 7. Using formulas

Quarto syntax can also be used to generate equations as a Latex math
expression, for example

$$E = mc^{2}$$

Or, the cumulative distribution function of a normal distribution as
given by:

$$
\Phi(x) = \frac{1}{2} \left[ 1 + \operatorname{erf} \left( \frac{x - \mu}{\sigma \sqrt{2}} \right) \right]
$$

where: $x$ is the variable $\mu$ is the mean, $\sigma$ is the standard
deviation, $\operatorname{erf}(z)$ is the error function defined by:

$$
\operatorname{erf}(z) = \frac{2}{\sqrt{\pi}} \int_0^z e^{-t^2} \, dt
$$
